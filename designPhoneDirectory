public class PhoneDirectory {
    Queue<Integer> unAssignedIntegers;
    HashSet<Integer> assignedIntegers;
    int currMax = 0;
    int max = 0;

    /** Initialize your data structure here
        @param maxNumbers - The maximum numbers that can be stored in the phone directory. */
    public PhoneDirectory(int maxNumbers) {
        assignedIntegers = new HashSet<Integer>();
        unAssignedIntegers = new LinkedList<Integer>();
        max = maxNumbers;
    }
    
    /** Provide a number which is not assigned to anyone.
        @return - Return an available number. Return -1 if none is available. */
    public int get() {
        if(currMax < max) {
            int temp = currMax;
            assignedIntegers.add(currMax);
            currMax++;
            return temp;
        }
        if(unAssignedIntegers.size() > 0) {
            int i = unAssignedIntegers.poll();
            assignedIntegers.add(i);
            return i;
        } else {
            return -1;
        }
    }
    
    /** Check if a number is available or not. */
    public boolean check(int number) {
        return !assignedIntegers.contains(number);
    }
    
    /** Recycle or release a number. */
    public void release(int number) {
        if(assignedIntegers.contains(number)) {
            assignedIntegers.remove(number);
            unAssignedIntegers.offer(number);
        }
    }
}

/**
 * Your PhoneDirectory object will be instantiated and called as such:
 * PhoneDirectory obj = new PhoneDirectory(maxNumbers);
 * int param_1 = obj.get();
 * boolean param_2 = obj.check(number);
 * obj.release(number);
 */

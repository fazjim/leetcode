public class Solution {
    public int maximumGap(int[] nums) {
        int n = nums.length;
        if(n < 2) return 0;
        int min = nums[0];
        int max = nums[0];
        for(int num: nums) {
            min = Math.min(min, num);
            max = Math.max(max, num);
        }
        
        int gap = (max - min)/(n-1);
        if(gap == 0) gap++;
        int len = (max - min) /gap + 1;
        int[] tmin = new int[len];
        int[] tmax = new int[len];
        for(int num: nums) {
            int index = (num - min)/gap;
            if(num > tmax[index]) tmax[index] = num;
            if(tmin[index] == 0 || num < tmin[index]) tmin[index] = num;
        }
        int maxGap = 0;
        for(int i = 0; i < len; i++) {
            if(tmin[i] - min > maxGap) maxGap = tmin[i] - min;
            if(tmax[i] != 0) min = tmax[i];
        }
        return maxGap;
    }
}

public class RandomizedCollection {
    HashMap<Integer, LinkedHashSet<Integer>> map = new HashMap<Integer, LinkedHashSet<Integer>>();
    List<Integer> storage = new ArrayList<Integer>();
    Random rand = new Random();
    /** Initialize your data structure here. */
    public RandomizedCollection() {
        
    }
    
    /** Inserts a value to the collection. Returns true if the collection did not already contain the specified element. */
    public boolean insert(int val) {
        storage.add(val);
        boolean isExist = false;
        if(map.containsKey(val)) {
            isExist = true;
        } else {
            isExist = false;
            map.put(val, new LinkedHashSet<Integer>());
        }
        map.get(val).add(storage.size()-1);
        return !isExist;
    }
    
    /** Removes a value from the collection. Returns true if the collection contained the specified element. */
    public boolean remove(int val) {
        if(!map.containsKey(val)) return false;
        int index = map.get(val).iterator().next();
        map.get(val).remove(index);
        if(index < storage.size()-1) {
            int last = storage.get(storage.size()-1);
            map.get(last).remove(storage.size()-1);
            map.get(last).add(index);
            storage.set(index, last);
        }
        storage.remove(storage.size()-1);
        if(map.get(val).size() == 0) map.remove(val);
        return true;
    }
    
    /** Get a random element from the collection. */
    public int getRandom() {
        return storage.get( rand.nextInt(storage.size()) );
    }
}

/**
 * Your RandomizedCollection object will be instantiated and called as such:
 * RandomizedCollection obj = new RandomizedCollection();
 * boolean param_1 = obj.insert(val);
 * boolean param_2 = obj.remove(val);
 * int param_3 = obj.getRandom();
 */

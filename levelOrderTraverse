/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public List<List<Integer>> levelOrder(TreeNode root) {
        Queue<TreeNode> queue = new LinkedList<TreeNode>();
        List<List<Integer>> lists = new ArrayList<List<Integer>>();
        List<Integer> currentList = new ArrayList<Integer>();
        if(root == null) return lists;
        queue.offer(root);
        while(queue.size()>0) {
            int size = queue.size();
            for(int i = 0; i < size; i++) {
                TreeNode node = queue.poll();
                int val = node.val;
                currentList.add(val);
                TreeNode left = node.left;
                TreeNode right = node.right;
                if(left != null) queue.offer(left);
                if(right != null) queue.offer(right);
            }
            lists.add(currentList);
            currentList = new ArrayList<Integer>();
        }
        return lists;
    }
}

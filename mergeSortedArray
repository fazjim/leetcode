public class Solution {
    public void merge(int[] nums1, int m, int[] nums2, int n) {
        int end = nums1.length - 1;
        int end1 = m-1;
        int end2 = n-1;
        while (end1 >= 0 || end2 >= 0) {
            if(end1 < 0) {
                nums1[end] = nums2[end2];
                end2--;
            } else if(end2 < 0) {
                nums1[end] = nums1[end1];
                end1--;
            } else if(nums1[end1] > nums2[end2]) {
                nums1[end] = nums1[end1];
                end1--;
            } else {
                nums1[end] = nums2[end2];
                end2--;
            }
            end--;
        }
        shiftLeft(nums1, m+n);
    }
    
    public void shiftLeft(int[] nums1, int length) {
        int shift = nums1.length - length;
        for (int i = 0; i < length; i++) {
            nums1[i] = nums1[shift + i];
        }
        for(int i = length; i < nums1.length; i++) {
            nums1[i] = 0;
        }
    }
}

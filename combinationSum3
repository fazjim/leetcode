public class Solution {
    public List<List<Integer>> combinationSum3(int k, int n) {
        List<List<Integer>> results = new ArrayList<List<Integer>>();
        List<Integer> comb = new ArrayList<Integer>();
        combineHelper(k, 1, n, comb, results);
        return results;
    }
    
    public void combineHelper(int k, int start, int n, List<Integer> comb, List<List<Integer>> results) {
        if(comb.size() > k) {
            return;
        } 
        if(comb.size() == k && n == 0) {
            List<Integer> newList = new ArrayList<Integer>(comb);
            results.add(newList);
        }
        
        for(int i = start; i <= 9; i++) {
            comb.add(i);
            combineHelper(k, i+1, n - i, comb, results);
            comb.remove(comb.size()-1);
        }
    }
}

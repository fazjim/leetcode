public class Solution {
    public String reverseVowels(String s) {
        StringBuilder sb = new StringBuilder(s);
        int start = 0;
        int end = s.length()-1;
        while(start<end) {
            while(start < s.length() && !isVowel(s.charAt(start))) {
                start++;
            }
            while(end >= 0 && !isVowel(s.charAt(end))) {
                end--;
            }
            //swap
            if(start<end) {
                sb.setCharAt(start, s.charAt(end));
                sb.setCharAt(end, s.charAt(start));
                start++;
                end--;
            }
        }
        return sb.toString();
    }
    
    public boolean isVowel(char c) {
        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'A' || c == 'E' || c == 'I' || c == 'O' || c== 'U') {
            return true;
        } else {
            return false;
        }
    }
}

//2nd trial
public class Solution {
    public String reverseVowels(String s) {
        int start = 0;
        int end = s.length() - 1;
        StringBuilder sb = new StringBuilder(s);
        while(start < end) {
            while(start < s.length() && !isVowel(s.charAt(start))) {
                start++;
            }
            while(end >= 0 && !isVowel(s.charAt(end))) {
                end--;
            }
            if(start < end) {
                swap(sb, start, end);
                start++;
                end--;
            }
        }
        return sb.toString();
    }
    
    public boolean isVowel(char c) {
        if(c == 'a'|| c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'A' || c == 'E' || c == 'I'|| c == 'O' || c == 'U') return true;
        return false;
    }
    public void swap(StringBuilder s, int i, int j) {
        char tmp = s.charAt(i);
        s.setCharAt(i, s.charAt(j));
        s.setCharAt(j, tmp);
    }
}

public class ZigzagIterator {
    List<Integer> pointer;
    List<Integer> v1;
    List<Integer> v2;
    int v1Index;
    int v2Index;
    
    public ZigzagIterator(List<Integer> v1, List<Integer> v2) {
        this.v1 = v1;
        this.v2 = v2;
        pointer = v1;
        v1Index = 0;
        v2Index = 0;
    }

    public int next() {
        int val = 0;
        if(pointer == v1) {
            if(v1Index >= v1.size()) {
                pointer = v2;
                val = pointer.get(v2Index);
                v2Index++;
            } else {
                val = pointer.get(v1Index);
                v1Index++;
                pointer = v2;
            }
        } else {
            if(v2Index >= v2.size()) {
                pointer = v1;
                val = pointer.get(v1Index);
                v1Index++;
            } else {
                val = pointer.get(v2Index);
                v2Index++;
                pointer = v1;
            }
        }
        return val;
    }

    public boolean hasNext() {
        if(v1Index < v1.size() || v2Index < v2.size()) return true;
        return false;
    }
}

/**
 * Your ZigzagIterator object will be instantiated and called as such:
 * ZigzagIterator i = new ZigzagIterator(v1, v2);
 * while (i.hasNext()) v[f()] = i.next();
 */

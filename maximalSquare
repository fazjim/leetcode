public class Solution {
    public int maximalSquare(char[][] matrix) {
        int row = matrix.length;
        if(row == 0) return 0;
        int col = matrix[0].length;
        int[][] dp = new int[row][col];
        int max = 0;
        for(int i = 0; i < row; i++) {
            dp[i][0] = (int)(matrix[i][0] - '0');
            if(dp[i][0] == 1) max = 1;
        }
        for(int i = 0; i < col; i++) {
            dp[0][i] = (int)(matrix[0][i] - '0');
            if(dp[0][i] == 1) max = 1;
        }

        for(int i = 1; i < row; i++) {
            for(int j = 1; j < col; j++) {
                if(matrix[i][j] == '1') {
                    dp[i][j] = Math.min(Math.min(dp[i-1][j], dp[i-1][j-1]), dp[i][j-1]) + 1;
                    if(dp[i][j] > max) max = dp[i][j];
                } else {
                    dp[i][j] = 0;
                }
            }
        }
        return (int)Math.pow(max, 2);
    }
}

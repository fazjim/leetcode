public class Solution {
    public int lengthOfLIS(int[] nums) {
        if(nums.length == 0) return 0;
        int[] base = new int[nums.length];
        int start = 0;
        int end = 0;
        base[0] = nums[0];
        for(int i = 1; i < nums.length; i++) {
            int num  = nums[i];
            int index = binarySearch(base, start, end, num);
            if(index > end)  {
                end++;
            }
            base[index] = num;
        }
        return end + 1;
    }
    
    public int binarySearch(int[] base, int start, int length, int val) {
        if(start > length) return start;
        if(start == length && val <= base[start]) return start;
        int middle = (start + length) / 2;
        if(val > base[middle]) {
            return binarySearch(base, middle + 1, length, val);
        } else {
            return binarySearch(base, start, middle - 1, val);
        }
    }
}

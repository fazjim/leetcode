public class MinStack {
    Stack<Integer> stack;
    PriorityQueue<Integer> pq; 
    HashMap<Integer, Integer> valueIndex = new HashMap<Integer, Integer>();
    
    /** initialize your data structure here. */
    public MinStack() {
        stack = new Stack<Integer>();
        pq = new PriorityQueue<Integer>();
    }
    
    public void push(int x) {
        stack.push(x);
        if(!valueIndex.containsKey(x)) {
            pq.add(x);
            valueIndex.put(x,1);
        } else {
            valueIndex.put(x, valueIndex.get(x)+1);
        }
    }
    
    public void pop() {
        int x = stack.pop();
        if(valueIndex.get(x) == 1) {
            valueIndex.remove(x);
            if(pq.peek() == x) pq.poll();
        } else {
            valueIndex.put(x, valueIndex.get(x)-1);
        }
    }
    
    public int top() {
        return stack.peek();
    }
    
    public int getMin() {
        return pq.peek();
    }
}

/**
 * Your MinStack object will be instantiated and called as such:
 * MinStack obj = new MinStack();
 * obj.push(x);
 * obj.pop();
 * int param_3 = obj.top();
 * int param_4 = obj.getMin();
 */

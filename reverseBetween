/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ListNode reverseBetween(ListNode head, int m, int n) {
        if(head == null || head.next == null) return head;
        if(m >= n) return head;
        ListNode lastBack = null;
        ListNode tail = null;
        int counter = 1;
        ListNode dummy = null;
        ListNode curr = head;
        while(curr != null) {
            if(counter < m) {
                dummy = curr;
                curr = curr.next;
            }else if(counter == m) {
                tail = curr;
                lastBack = tail;
                curr = curr.next;
            } else if(counter <= n) {
                ListNode tmp = curr;
                curr = curr.next;
                tmp.next = lastBack;
                lastBack = tmp;
            } else {
                break;
            }
            counter++;
        }
        tail.next = curr;
        if(dummy != null) {
            dummy.next = lastBack;
        } else {
            head = lastBack;
        }
        return head;
    }
}

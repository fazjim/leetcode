/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public boolean isBalanced(TreeNode root) {
        if(root == null) return true;
        if(getLength(root) < 0) return false;
        else return true;
    }
    
    public int getLength(TreeNode root) {
        if(root == null) {
            return 0;
        }
        TreeNode left = root.left;
        TreeNode right = root.right;
        int smallDepth = getLength(left);
        int largeDepth = getLength(right);
        if(smallDepth < 0 || largeDepth < 0) return -1;
        int diff = largeDepth - smallDepth;
        if(smallDepth > largeDepth) {
            diff = smallDepth - largeDepth;
            largeDepth = smallDepth;
        }
        if(diff > 1) return -1;
        else return largeDepth + 1;
    }
}

public class Solution {
    public int maxProfit(int k, int[] prices) {
        if(k == 0) return 0;
        int maxProfit = 0;
        if(k >= prices.length) {
            for(int i = 1; i < prices.length; i++) {
                maxProfit += Math.max(prices[i] - prices[i-1], 0);
            }
            return maxProfit;
        }
        int[] buy = new int[k];
        int[] sell = new int[k];
        Arrays.fill(buy, Integer.MIN_VALUE);
        for(int price: prices) {
            for(int i = k - 1; i >= 0; i--) {
                sell[i] = Math.max(sell[i], buy[i]+price);
                if(i == 0) {
                    buy[i] = Math.max(buy[i], -price);
                } else {
                    buy[i] = Math.max(buy[i], sell[i-1] - price);
                }
            }
        }
        return sell[k-1];
    }
}

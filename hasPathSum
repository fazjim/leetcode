/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public boolean hasPathSum(TreeNode root, int sum) {
       if(root == null) {
           return false;
       } else {
           int val = root.val;
           TreeNode left = root.left;
           TreeNode right = root.right;
           if(left == null && right == null) {
               if(val == sum) return true;
               else return false;
           }
           return (hasPathSum(left, sum-val) || hasPathSum(right, sum-val));
       }
    }
}


//v2
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public boolean hasPathSum(TreeNode root, int sum) {
        if(root == null) return false;
        if(root.left == null && root.right == null && root.val == sum) return true;
        return hasPathSum(root.left, sum - root.val) | hasPathSum(root.right, sum - root.val);
        
    }
    
    
}

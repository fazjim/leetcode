class Node implements Comparable<Node> {
    int x;
    int y;
    int val;
    
    public Node(int x, int y, int val) {
        this.x = x;
        this.y = y;
        this.val = val;
    }
    
    public int compareTo(Node node) {
        return this.val - node.val;
    }
}

public class Solution {
    public int kthSmallest(int[][] matrix, int k) {
        PriorityQueue<Node> pq = new PriorityQueue<Node>();
        int n = matrix.length;
        for(int i = 0; i < n; i++) {
            pq.offer(new Node(0, i, matrix[0][i]));
        }
        for(int i = 0; i < k-1; i++) {
            Node smallest = pq.poll();
            int x = smallest.x;
            int y = smallest.y;
            if(x < n-1) {
                pq.offer(new Node(x+1, y, matrix[x+1][y]));
            } 
        }
        Node kNode = pq.poll();
        return kNode.val;
    }
}

public class Solution {
    public List<List<Integer>> subsets(int[] nums) {
        List<List<Integer>> result = new ArrayList<List<Integer>>();
        List<Integer> currentList = new ArrayList<Integer>();
        result.add(new ArrayList<Integer>());
        dfs(result, currentList, nums, 0);
        return result;
    }
    
    public void dfs(List<List<Integer>> result, List<Integer> currentList, int[] nums, int index) {
        if(index >= nums.length) return;
        List<Integer> newList = new ArrayList(currentList);
        newList.add(nums[index]);
        result.add(newList);
        
        dfs(result, currentList, nums, index+1);
        currentList.add(nums[index]);
        dfs(result, currentList, nums, index+1);
        currentList.remove(currentList.size()-1);
    }
}

//There is also the bit manipulation method

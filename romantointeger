import java.util.Hashtable;
public class Solution {
    //tags: M  D  C L X V I
    public int romanToInt(String s) {
        int val = 0;
        for(int i = 0;i<s.length();i++) {
            char c = s.charAt(i);
            int temp = getValue(c);
            if(i < s.length()-1) {
                char nextChar = s.charAt(i+1);
                if(temp<getValue(nextChar)) val = val - 2*temp;
            }
            val += temp;
        }
        return val;
    }
    
    public int getValue(char c) {
        if(c == 'M') return 1000;
        else if(c == 'D') return 500;
        else if(c == 'C') return 100;
        else if(c == 'L') return 50;
        else if(c == 'X') return 10;
        else if(c == 'V') return 5;
        else if(c == 'I') return 1;
        return 0;
    }
}


//2nd attempt
public class Solution {
    public int romanToInt(String s) {
        int val = 0;
        int i = 0;
        while (i < s.length()) {
            if(i == s.length() - 1) {
                val += getNum(s.charAt(i));
                i++;
            } else {
                char c1 = s.charAt(i);
                char c2 = s.charAt(i+1);
                int val1 = getNum(c1);
                int val2 = getNum(c2);
                if(val1 < val2) {
                    val += (val2 - val1);
                    i+= 2;
                } else {
                    val += val1;
                    i++;
                }
            }
        }
        return val;
    }
    
    public int getNum(char c) {
        if (c == 'I') {
            return 1;
        } else if(c == 'V') {
            return 5;
        } else if(c == 'X') {
            return 10;
        } else if(c == 'L') {
            return 50;
        } else if(c == 'C') {
            return 100;
        } else if(c == 'D') {
            return 500;
        } else if(c == 'M') {
            return 1000;
        }
        return -1;
    }
}

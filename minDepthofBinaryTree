/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public int minDepth(TreeNode root) {
        if(root == null) return 0;
        Stack<TreeNode> currentLayer = new Stack<TreeNode>();
        Stack<TreeNode> nextLayer = new Stack<TreeNode>();
        currentLayer.push(root);
        
        int minDepth = 1;
        while(!currentLayer.empty()) {
            TreeNode node = currentLayer.pop();
            TreeNode left = node.left;
            TreeNode right = node.right;
            if(left == null && right == null) return minDepth;
            if(left != null) nextLayer.push(left);
            if(right != null) nextLayer.push(right);
            if(currentLayer.empty()) {
                Stack<TreeNode> tmp = currentLayer;
                currentLayer = nextLayer;
                nextLayer = tmp;
                minDepth++;
            }
        }
        return minDepth;
    }
    
}

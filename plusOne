public class Solution {
    public int[] plusOne(int[] digits) {
        Stack<Integer> stack = new Stack<Integer>();
        int addOn = 1;
        for(int i = digits.length - 1; i >= 0; i--) {
            int val = digits[i] + addOn;
            int digit = val % 10;
            addOn = val / 10;
            stack.push(digit);
        }
        if(addOn > 0) stack.push(addOn);
        int[] newArray = new int[stack.size()];
        int index = 0;
        while(!stack.empty()) {
            int val = stack.pop();
            newArray[index] = val;
            index++;
        }
        return newArray;
    }
}


//version 2
public class Solution {
    public int[] plusOne(int[] digits) {
        int offset = 1;
        for(int i = digits.length - 1; i >= 0; i--) {
            int newDigit = digits[i] + offset;
            digits[i] = newDigit % 10;
            offset = newDigit / 10;
            if(i == 0 && offset == 1) {
                int[] newResult = new int[digits.length+1];
                newResult[0] = 1;
                for(int j = 1; j < newResult.length; j++) {
                    newResult[j]  = digits[j-1];
                }
                return newResult;
            }
        }
        return digits;
    }
}

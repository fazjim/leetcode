//Be careful of the region case!!!! if i == 1, i - 1 = 0 and goes back, then will go into dead loop
public class Solution {
    public void solve(char[][] board) {
        int row = board.length;
        if(row == 0) return;
        int col = board[0].length;
        for(int i = 0; i < row; i++) {
            for(int j = 0; j < col; j++) {
                if(board[i][j] == 'O' && (i == 0 || i == row -1 || j == 0 || j == col - 1)) {
                    dfs(board, i, j, row, col);
                }
            }
        }
        for(int i = 0; i < row; i++) {
            for(int j = 0; j < col; j++) {
                if(board[i][j] == 'O') {
                    board[i][j] = 'X';
                }
            }
        }
        for(int i = 0; i < row; i++) {
            for(int j = 0; j < col; j++) {
                if(board[i][j] == '1') {
                    board[i][j] = 'O';
                }
            }
        }
    }
    
    public void dfs(char[][] board, int i, int j, int row, int col) {
        if(i >= 0 && i < row && j >=0 && j < col && board[i][j] == 'O') {
            board[i][j] = '1';
            if(i > 1)
                dfs(board, i-1, j, row, col);
            if(i < row - 1)
                dfs(board, i+1, j, row, col);
            if(j > 1)
                dfs(board, i, j-1, row, col);
            if(j < col - 1)
                dfs(board, i, j+1, row, col);
        }
    }
}

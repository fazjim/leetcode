/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
 
 
public class Solution {
    public TreeNode sortedListToBST(ListNode head) {
        ArrayList<Integer> vals = new ArrayList<Integer>();
        while(head!=null) {
            int val = head.val;
            head = head.next;
            vals.add(val);
        }
        return toBst(vals, 0, vals.size()-1);
    }
    
    public TreeNode toBst(ArrayList<Integer> vals, int beginIndex, int endIndex) {
        if(beginIndex<=endIndex) {
            int mid = (beginIndex+endIndex)/2;
            TreeNode root = new TreeNode(vals.get(mid));
            TreeNode left = toBst(vals, beginIndex, mid-1);
            TreeNode right = toBst(vals, mid+1, endIndex);
            root.left = left;
            root.right = right;
            return root;
        } else {
            return null;   
        }
    }
}

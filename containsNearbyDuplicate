public class Solution {
    public boolean containsNearbyDuplicate(int[] nums, int k) {
        HashMap<Integer, Integer> numIndex = new HashMap<Integer, Integer>();
        for(int i = 0; i < nums.length; i++) {
            int val = nums[i];
            if(!numIndex.containsKey(val)) {
                numIndex.put(val, i);
            } else {
                int index = numIndex.get(val);
                if(i - index <= k) {
                    return true;
                } else {
                    numIndex.put(val, i);
                }
            }
        }
        return false;
    }
}

public class Solution {
    public boolean containsNearbyDuplicate(int[] nums, int k) {
        HashSet<Integer> numIndex = new HashSet<Integer>();
        for(int i = 0; i < nums.length; i++) {
            if(i>k) {
                numIndex.remove(nums[i-k-1]);
            } 
            if(numIndex.contains(nums[i])) {
                return true;
            } else {
                numIndex.add(nums[i]);
            }
        }
        return false;
    }
}

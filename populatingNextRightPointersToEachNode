/**
 * Definition for binary tree with next pointer.
 * public class TreeLinkNode {
 *     int val;
 *     TreeLinkNode left, right, next;
 *     TreeLinkNode(int x) { val = x; }
 * }
 */
public class Solution {
    public void connect(TreeLinkNode root) {
        if(root == null) return;
        Queue<TreeLinkNode> queue = new LinkedList<TreeLinkNode>();
        queue.offer(root);
        while(queue.size() > 0) {
            int size = queue.size();
            TreeLinkNode prevNode = null;
            for(int i = 0; i < size; i++) {
                TreeLinkNode node1 = queue.poll();
                if(prevNode == null) {
                    prevNode = node1;
                } else {
                    prevNode.next = node1;
                    prevNode = node1;
                }
                if(node1.left != null)
                    queue.offer(node1.left);
                if(node1.right != null) 
                    queue.offer(node1.right);
            }
        }
    }
}

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode result = null;
        ListNode temp = null;
        int addUp = 0;
        boolean l1End = false;
        boolean l2End = false;
        if(l1 == null) l1End = true;
        if(l2 == null) l2End = true;
        while(!(l1End && l2End)) {
            int val = 0;
            if(!l1End) val += l1.val;
            if(!l2End) val += l2.val;
            val = val + addUp;
            if(val>=10) {
                val = val - 10;
                addUp = 1;
            } else {
                addUp = 0;
            }
            if(result == null) {
                result = new ListNode(val);
                temp = result;
            } else {
                ListNode newNode = new ListNode(val);
                temp.next = newNode;
                temp = newNode;
            }
            if(!l1End)
            l1 = l1.next;
            if(!l2End)
            l2 = l2.next;
            if(l1==null) l1End = true;
            if(l2==null) l2End = true;
        }
        
        if(addUp == 1) {
            ListNode end = new ListNode(1);
            temp.next = end;
        }
        if(result == null)
        return new ListNode(0);
        return result;
    }
}
